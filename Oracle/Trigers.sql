CREATE OR REPLACE TRIGGER DODANIE_REZERWACJI_TRIGGER
    AFTER INSERT
    ON REZERWACJE
    FOR EACH ROW
BEGIN
    INSERT INTO REZERWACJE_LOG (ID_REZERWACJI, DATA, STATUS)
    VALUES (:NEW.NR_REZERWACJI, CURRENT_DATE, :NEW.STATUS);

    UPDATE WYCIECZKI w
    SET LICZBA_WOLNYCH_MIEJSC = LICZBA_WOLNYCH_MIEJSC - 1
    WHERE w.ID_WYCIECZKI = :NEW.ID_WYCIECZKI;
END;

CREATE OR REPLACE TRIGGER ZMIANA_STATUSU_TRIGGER
    AFTER UPDATE
    ON REZERWACJE
    FOR EACH ROW
DECLARE
    nowe_miejsce INT;
BEGIN
    INSERT INTO REZERWACJE_LOG (ID_REZERWACJI, DATA, STATUS)
    VALUES (:NEW.NR_REZERWACJI, CURRENT_DATE, :NEW.STATUS);

    --jeśli zmieniamy status na 'A' to zwiększa się liczba wolnych miejsc
    -- w ozostałych przypadkach liczba wolnych miejsc pozostaje bez zmian
    IF :NEW.STATUS = 'A' THEN
        nowe_miejsce := 1;
    ELSE
        nowe_miejsce := 0;
    END IF;

    UPDATE WYCIECZKI w
    SET LICZBA_WOLNYCH_MIEJSC = LICZBA_WOLNYCH_MIEJSC + nowe_miejsce
    WHERE w.ID_WYCIECZKI = :NEW.ID_WYCIECZKI;
END zmiana_statusu_trigger;

CREATE OR REPLACE TRIGGER ZAKZAz_USUWANIA_REZERWACJI_TRIGGER
    BEFORE DELETE
    ON REZERWACJE
    FOR EACH ROW
BEGIN
    raise_application_error(-20008, 'Nie wolno usuwać rezerwacji');
END;